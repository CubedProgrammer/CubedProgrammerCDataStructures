#ifndef __cplusplus
#ifndef INCLUDED_CPCDS_MAP_ITER_H
#define INCLUDED_CPCDS_MAP_ITER_H
#define define_cpcds_miter(name,__k__,__v__)typedef cpcds_mkvpair_##name*cpcds_mkvpair_##name##ptr;define_cpcds_deque(mp##name,cpcds_mkvpair_##name*)struct cpcds_miter_##name{cpcds_mkvpair_##name*curr;cpcds_deque_mp##name*cln;};typedef struct cpcds_miter_##name cpcds_miter_##name;static inline cpcds_miter_##name cpcds_map_iter_begin_##name(cpcds_map_##name*mp){cpcds_miter_##name __it__;__it__.cln=(cpcds_deque_mp##name*)malloc(sizeof(cpcds_deque_mp##name));*__it__.cln=cpcds_mk_deque_empty_mp##name();cpcds_mkvpair_##name*curr=mp->rt;__it__.curr=curr;while(curr!=NULL){cpcds_deque_push_mp##name(__it__.cln,curr);curr=curr->lc;}return __it__;}static inline cpcds_miter_##name cpcds_map_iter_end_##name(cpcds_map_##name*mp){cpcds_miter_##name __it__;__it__.cln=(cpcds_deque_mp##name*)malloc(sizeof(cpcds_deque_mp##name));*__it__.cln=cpcds_mk_deque_empty_mp##name();__it__.curr=NULL;return __it__;}static inline bool cpcds_map_iter_equal_##name(cpcds_miter_##name x,cpcds_miter_##name y){return x.curr==y.curr;}static inline void cpcds_map_iter_next_##name(cpcds_miter_##name*__it__){cpcds_mkvpair_##name*curr=cpcds_deque_pop_back_mp##name(__it__->cln)->rc;__it__->curr=__it__->cln->size==0?NULL:cpcds_stack_top_mp##name(__it__->cln);while(curr!=NULL){__it__->curr=curr;cpcds_deque_push_mp##name(__it__->cln,curr);curr=curr->lc;}}static inline cpcds_mkvpair_##name cpcds_map_iter_get_##name(cpcds_miter_##name*__it__){return*cpcds_deque_get_back_mp##name(__it__->cln);}
#define cpcds_miter_define(__k__,__v__)define_cpcds_miter(__k__##__##__v__)
#endif
#endif
