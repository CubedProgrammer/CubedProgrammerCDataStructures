#ifndef __cplusplus
#ifndef Included_cpcds_ost_insert_h
#define Included_cpcds_ost_insert_h
#define define_cpcds_ostins(name,__t__,compar)void cpcds_ost_fix_insertion_##name(cpcds_ostn_##name node,cpcds_ost_##name*ost){cpcds_ostn_##name pr;cpcds_ostn_##name gp;cpcds_ostn_##name u;while(node!=ost->rt&&node->pr->col==CPCDS_OST_RED){pr=node->pr;gp=pr->pr;if(gp->lc==pr){u=gp->rc;}else{u=gp->lc;}if(u!=NULL&&u->col==CPCDS_OST_RED){gp->col=CPCDS_OST_RED;pr->col=CPCDS_OST_BLACK;u->col=CPCDS_OST_BLACK;}else{if(pr==gp->lc){if(node==pr->rc){cpcds_ost_left_rot_##name(ost,pr);}cpcds_ost_right_rot_##name(ost,gp);gp->pr->col=CPCDS_OST_BLACK;gp->col=CPCDS_OST_RED;}else{if(node==pr->lc){cpcds_ost_right_rot_##name(ost,pr);}cpcds_ost_left_rot_##name(ost,gp);gp->pr->col=CPCDS_OST_BLACK;gp->col=CPCDS_OST_RED;}}node=gp;};ost->rt->col=CPCDS_OST_BLACK;}void cpcds_ost_ins_##name(cpcds_ost_##name *ost,__t__ val){if(ost->rt==NULL){ost->rt=malloc(sizeof(*ost->rt));ost->sz=1;ost->rt->sz=1;ost->rt->val=val;ost->rt->pr=NULL;ost->rt->lc=NULL;ost->rt->rc=NULL;ost->rt->col=CPCDS_OST_BLACK;}else{int c;cpcds_ostn_##name n=ost->rt;while(n!=NULL){c=compar(val,n->val);if(c>0){if(n->rc==NULL){n->rc=malloc(sizeof(*n->rc));n->rc->pr=n;n->rc->lc=NULL;n->rc->rc=NULL;n->rc->sz=1;n->rc->val=val;n->rc->col=CPCDS_OST_RED;cpcds_ost_fix_insertion_##name(n->rc,ost);n=NULL;}else{n=n->rc;}}else if(c<0){if(n->lc==NULL){n->lc=malloc(sizeof(*n->lc));n->lc->pr=n;n->lc->lc=NULL;n->lc->rc=NULL;n->lc->sz=1;n->lc->val=val;n->lc->col=CPCDS_OST_RED;cpcds_ost_fix_insertion_##name(n->lc,ost);n=NULL;}else{n=n->lc;}}else{n=NULL;}}}}
#endif
#endif
