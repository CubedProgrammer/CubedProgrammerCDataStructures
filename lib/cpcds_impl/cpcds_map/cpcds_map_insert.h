#ifndef __cplusplus
#ifndef INCLUDED_CPCDS_MAP_INSERT_H
#define INCLUDED_CPCDS_MAP_INSERT_H
#define define_cpcds_mins(name,__k__,__v__,compar)void cpcds_map_ins_##name(cpcds_map_##name*mp,__k__ key,__v__ val){if(mp->size==0){mp->rt=(cpcds_mkvpair_##name*)malloc(sizeof(cpcds_mkvpair_##name));*mp->rt=cpcds_mk_map_mkvpair_##name(key,val,NULL,NULL,NULL);++mp->size;}else{cpcds_mkvpair_##name*n=mp->rt;cpcds_mkvpair_##name*tmp=NULL;__s:if(compar(key,n->key)<0){if(n->lc!=NULL){n=n->lc;goto __s;}else{n->lc=(cpcds_mkvpair_##name*)malloc(sizeof(cpcds_mkvpair_##name));*n->lc=cpcds_mk_map_mkvpair_##name(key,val,n,NULL,NULL);tmp=n;__cpcds_mheight_update(tmp)cpcds_map_fix_ins_##name(mp,n);++mp->size;}}else if(compar(n->key,key)<0){if(n->rc!=NULL){n=n->rc;goto __s;}else{n->rc=(cpcds_mkvpair_##name*)malloc(sizeof(cpcds_mkvpair_##name));*n->rc=cpcds_mk_map_mkvpair_##name(key,val,n,NULL,NULL);tmp=n;__cpcds_mheight_update(tmp)cpcds_map_fix_ins_##name(mp,n);++mp->size;}}else{n->val=val;}}}void cpcds_map_erase_##name(cpcds_map_##name*mp,__k__ key){if(mp->size==0){}else{}--mp->size;}__v__ cpcds_map_get_##name(){}bool cpcds_map_fnd_##name(cpcds_map_##name*mp,__k__ key){cpcds_mkvpair_##name*node=mp->rt;__chkdir:if(compar(node->key,key)<0){if(node->rc!=NULL){node=node->rc;goto __chkdir;}}else if(compar(node->key,key)>0){if(node->lc!=NULL){node=node->lc;goto __chkdir;}}return compar(node->key,key)==0;}
#define cpcds_mins_define(__k__,__v__,compar)define_cpcds_mins(__k__##__##__v__,__k__,__v__,compar)
#endif
#endif
